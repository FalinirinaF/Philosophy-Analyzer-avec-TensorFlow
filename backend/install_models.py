#!/usr/bin/env python3
"""
Script d'installation des mod√®les requis pour Exo Philos
"""

import subprocess
import sys
import os

def install_spacy_model():
    """
    Installe le mod√®le spaCy fran√ßais
    """
    try:
        print("Installation du mod√®le spaCy fran√ßais...")
        subprocess.check_call([sys.executable, "-m", "spacy", "download", "fr_core_news_sm"])
        print("‚úÖ Mod√®le fran√ßais install√© avec succ√®s")
    except subprocess.CalledProcessError:
        print("‚ö†Ô∏è  √âchec de l'installation du mod√®le fran√ßais, tentative avec le mod√®le anglais...")
        try:
            subprocess.check_call([sys.executable, "-m", "spacy", "download", "en_core_web_sm"])
            print("‚úÖ Mod√®le anglais install√© avec succ√®s")
        except subprocess.CalledProcessError:
            print("‚ùå √âchec de l'installation des mod√®les spaCy")
            return False
    return True

def create_directories():
    """
    Cr√©e les r√©pertoires n√©cessaires
    """
    directories = ["models", "data", "logs"]
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
        print(f"‚úÖ R√©pertoire {directory} cr√©√©")

def main():
    print("üöÄ Installation des d√©pendances pour Exo Philos Backend")
    print("=" * 50)
    
    # Cr√©ation des r√©pertoires
    create_directories()
    
    # Installation du mod√®le spaCy
    if install_spacy_model():
        print("\n‚úÖ Installation termin√©e avec succ√®s!")
        print("\nPour d√©marrer le serveur:")
        print("python main.py")
    else:
        print("\n‚ùå Installation incompl√®te")
        sys.exit(1)

if __name__ == "__main__":
    main()
